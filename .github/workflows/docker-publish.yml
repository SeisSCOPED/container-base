name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '21 21 * * 5'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: seisscoped/container-base


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Setup for Multi-platform image
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-cache
            /tmp/.buildx-cache-mpi
            /tmp/.buildx-cache-jupyterlab
            /tmp/.buildx-cache-centos7
            /tmp/.buildx-cache-centos7-mpi
            /tmp/.buildx-cache-centos7-jupyterlab
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          flavor: |
            latest=true
          images: |
            ${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action

      # Build and push centos image
      - name: Build and push Centos image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile_centos7
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:centos7
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:centos7
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-centos7
          cache-to: type=local,dest=/tmp/.buildx-cache-centos7-new
      
      # Build and push centos MPI image
      - name: Build and push Centos MPI image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile_mpi
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:centos7_mpi
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:centos7_mpi
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-centos7-mpi
          cache-to: type=local,dest=/tmp/.buildx-cache-centos7-mpi-new
      
      # Build and push centos JupyterLab image
      - name: Build and push Centos JupyterLab image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile_jupyter
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:centos7_jupyterlab
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:centos7_jupyterlab
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-centos7-jupyterlab
          cache-to: type=local,dest=/tmp/.buildx-cache-centos7-jupyterlab-new
      
      # Build and push ubuntu MPI image
      - name: Build and push Ubuntu MPI image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile_mpi
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:ubuntu20.04_mpi
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ubuntu20.04_mpi
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-mpi
          cache-to: type=local,dest=/tmp/.buildx-cache-mpi-new
      
      # Build and push ubuntu JupyterLab image
      - name: Build and push Ubuntu JupyterLab image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile_jupyter
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:ubuntu20.04_jupyterlab
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ubuntu20.04_jupyterlab
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-jupyterlab
          cache-to: type=local,dest=/tmp/.buildx-cache-jupyterlab-new

      # Build and push ubuntu image
      - name: Build and push Ubuntu image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.IMAGE_NAME }}:ubuntu20.04
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ubuntu20.04
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache /tmp/.buildx-cache-centos7 /tmp/.buildx-cache-centos7-mpi /tmp/.buildx-cache-centos7-jupyterlab /tmp/.buildx-cache-mpi /tmp/.buildx-cache-jupyterlab
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          mv /tmp/.buildx-cache-centos7-new /tmp/.buildx-cache-centos7
          mv /tmp/.buildx-cache-mpi-new /tmp/.buildx-cache-mpi
          mv /tmp/.buildx-cache-centos7-mpi-new /tmp/.buildx-cache-centos7-mpi
          mv /tmp/.buildx-cache-jupyterlab-new /tmp/.buildx-cache-jupyterlab
          mv /tmp/.buildx-cache-centos7-jupyterlab-new /tmp/.buildx-cache-centos7-jupyterlab
