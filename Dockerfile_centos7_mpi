# Use Ubuntu as the base
FROM centos:centos7

########################################
# Configure ENV
########################################

SHELL ["/bin/bash", "-c"]

ENV SHELL=/bin/bash

########################################
# Add docker-clean
########################################

ADD extras/docker-clean /usr/bin/docker-clean
RUN chmod a+rx /usr/bin/docker-clean && docker-clean

########################################
# Necessary packages
########################################

RUN yum -y install epel-release && \
    yum -y groupinstall "Development tools"\
	&& yum -y install curl wget which tini \
	&& docker-clean

########################################
# Install mpi
########################################

# necessities and IB stack
RUN yum-config-manager --add-repo https://linux.mellanox.com/public/repo/mlnx_ofed/5.0-2.1.8.0/rhel7.8/mellanox_mlnx_ofed.repo
RUN yum -y install libgfortran libibmad-devel libibumad libibverbs-devel librdmacm libxml2-devel ca-certificates \
    libpsm2-compat libpsm2 libpsm2-devel \
    numactl-libs mlnx-ofa_kernel mlnx-ofa_kernel-devel mlnx-ofa_kernel-modules \
    ucx ucx-cma ucx-devel ucx-ib ucx-knem ucx-rdmacm \
    && docker-clean

# Install impi-19.0.7
ARG MAJV=19
ARG MINV=0
ARG BV=.7
ARG DIR=intel${MAJV}-${MAJV}.${MINV}${BV}

ADD extras/intelproducts.repo /etc/yum.repos.d/intelproducts.repo
RUN yum install -y intel-mpi-20${MAJV}${BV}-102 \
    && rm -r /opt/intel/compilers_and_libraries/linux/mpi/intel64/lib/debug/libmpi.a \
             /opt/intel/compilers_and_libraries/linux/mpi/intel64/lib/debug_mt/libmpi.a \
             /opt/intel/compilers_and_libraries/linux/mpi/intel64/lib/release_mt/libmpi.a \
    && docker-clean

# Configure environment for impi
ENV MPIVARS_SCRIPT=/opt/intel/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh \
    I_MPI_LIBRARY_KIND=release \
    I_MPI_OFI_LIBRARY_INTERNAL=1 \
    I_MPI_REMOVED_VAR_WARNING=0 \
    I_MPI_VAR_CHECK_SPELLING=0 \
    BASH_ENV=/opt/intel/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh
RUN sed -i 's~bin/sh~bin/bash~' $MPIVARS_SCRIPT \
    && sed -i '/bin\/bash/a \[ "${IMPI_LOADED}" == "1" \] && return' $MPIVARS_SCRIPT \
    && echo "export IMPI_LOADED=1" >> $MPIVARS_SCRIPT \
    && echo -e '#!/bin/bash\n. /opt/intel/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh -ofi_internal=1 release\nexec "${@}"' > /entry.sh \
    && chmod +x /entry.sh

# Add hello world
ADD extras/hello.c /tmp/hello.c
RUN mpicc /tmp/hello.c -o /usr/local/bin/hellow \
    && rm /tmp/hello.c \
    && docker-clean

# Build benchmark programs
ADD extras/install_benchmarks.sh /tmp/install_benchmarks.sh
RUN bash /tmp/install_benchmarks.sh

# Configure environment
ENV NB_USER=scoped \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8

ENV HOME="/home/${NB_USER}"

########################################
# Configure container startup
########################################

ENTRYPOINT ["tini", "-s", "-g", "--", "/entry.sh", "/usr/bin/startup.sh"]

COPY extras/empty_startup.sh /usr/bin/startup.sh
RUN chmod +x /usr/bin/startup.sh

WORKDIR "${HOME}"
